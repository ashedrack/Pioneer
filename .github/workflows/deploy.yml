name: Simple Deployment Pipeline

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_REGION: us-east-1

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Deploy to ECS (Staging)
        if: github.ref == 'refs/heads/staging'
        run: |
          aws ecs update-service \
            --cluster staging-cluster \
            --service pioneer-service \
            --force-new-deployment

      # - name: Deploy to ECS (Production)
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     aws ecs update-service \
      #       --cluster production-cluster \
      #       --service pioneer-service \
      #       --force-new-deployment

