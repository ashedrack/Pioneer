name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_REGION: us-east-1 # Set default region

permissions:
  contents: read
  packages: write
  id-token: write # Required for AWS OIDC

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' && 
      (github.ref == 'refs/heads/main' || 
       github.ref == 'refs/heads/develop' || 
       startsWith(github.ref, 'refs/heads/feature/') || 
       startsWith(github.ref, 'refs/heads/fix/'))
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-staging:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' && 
      (github.ref == 'refs/heads/develop' || 
       startsWith(github.ref, 'refs/heads/feature/') || 
       startsWith(github.ref, 'refs/heads/fix/'))
    environment: ${{ vars.STAGING_ENV || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster staging-cluster --service pioneer-service --force-new-deployment

# Production deployment commented out for now
# deploy-production:
#   name: Deploy to Production
#   needs: build
#   runs-on: ubuntu-latest
#   if: github.ref == 'refs/heads/main'
#   environment: ${{ vars.PRODUCTION_ENV || 'production' }}
#   
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
#
#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v2
#       with:
#         role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
#         aws-region: ${{ env.AWS_REGION }}
#         audience: sts.amazonaws.com
#
#     - name: Deploy to ECS
#       run: |
#         aws ecs update-service --cluster production-cluster --service pioneer-service --force-new-deployment
