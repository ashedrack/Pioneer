version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=cloudpioneer
      - POSTGRES_DB=cloudpioneer
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
    depends_on:
      - db
      - kafka
      - redis
    volumes:
      - ./models:/app/models
    networks:
      - cloud-pioneer-network

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=cloudpioneer
      - POSTGRES_DB=cloudpioneer
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cloud-pioneer-network

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_MESSAGE_MAX_BYTES=1342177280
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1342177280
      - KAFKA_MAX_REQUEST_SIZE=1342177280
      - KAFKA_MAX_PARTITION_FETCH_BYTES=1342177280
      - KAFKA_SOCKET_REQUEST_MAX_BYTES=1342177280
      - KAFKA_SOCKET_RECEIVE_BUFFER_BYTES=1342177280
      - KAFKA_SOCKET_SEND_BUFFER_BYTES=1342177280
      - KAFKA_LOG_RETENTION_HOURS=24
      - KAFKA_LOG_RETENTION_BYTES=2684354560
      - KAFKA_NUM_PARTITIONS=3
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS=300000
      - KAFKA_CONNECTIONS_MAX_IDLE_MS=600000
      - KAFKA_MAX_CONNECTIONS=1000
      # JVM and memory settings
      - KAFKA_HEAP_OPTS=-Xmx2G -Xms2G
      - KAFKA_JVM_PERFORMANCE_OPTS=-XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15
      - KAFKA_GC_LOG_OPTS=-Xlog:gc*:file=/var/log/kafka/gc.log:time,tags:filecount=10,filesize=100M
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 2G
    volumes:
      - kafka_data:/var/lib/kafka/data
      - kafka_logs:/var/log/kafka
    depends_on:
      - zookeeper
    networks:
      - cloud-pioneer-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_MAX_CLIENT_CNXNS=60
      - ZOOKEEPER_SYNC_LIMIT=5
      - ZOOKEEPER_HEAP_OPTS=-Xmx512M -Xms512M
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - cloud-pioneer-network

  redis:
    image: redis:6.2
    command: redis-server --requirepass cloudpioneer --maxmemory 1gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 1.5G
        reservations:
          memory: 1G
    networks:
      - cloud-pioneer-network

  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
    ports:
      - "9090:9090"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - cloud-pioneer-network

  grafana:
    image: grafana/grafana:8.2.0
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=cloudpioneer
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    depends_on:
      - prometheus
    networks:
      - cloud-pioneer-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
      - NODE_ENV=development
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    depends_on:
      - api
    networks:
      - cloud-pioneer-network

networks:
  cloud-pioneer-network:
    driver: bridge

volumes:
  postgres_data:
  kafka_data:
  kafka_logs:
  zookeeper_data:
  zookeeper_logs:
  redis_data:
  prometheus_data:
  grafana_data:
